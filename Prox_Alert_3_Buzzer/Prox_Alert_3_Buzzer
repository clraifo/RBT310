//DEFINITELY KEEP THIS ONE IT WORKS
//IT'S IN THIS PARTICLE APP: https://build.particle.io/build/64cff49151b7b00017ec3817
//NAMED PROX_ALERT_3_BUZZER


// Define pins
const int trigPin = D2;
const int echoPin = D3;
const int greenLED = D4;
const int yellowLED = D5;
const int redLED = D6;
const int buzzer = D7;

void setup() {
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin, INPUT);
    pinMode(greenLED, OUTPUT);
    pinMode(yellowLED, OUTPUT);
    pinMode(redLED, OUTPUT);
    pinMode(buzzer, OUTPUT);

    // Initiate LEDs and buzzer to be off
    digitalWrite(greenLED, LOW);
    digitalWrite(yellowLED, LOW);
    digitalWrite(redLED, LOW);
    digitalWrite(buzzer, LOW);
}

void tone(int pin, unsigned int frequency) {
    long half_period = 500000L / frequency;
    for (int i = 0; i < 100; i++) { // Play the tone for a short duration
        digitalWrite(pin, HIGH);
        delayMicroseconds(half_period);
        digitalWrite(pin, LOW);
        delayMicroseconds(half_period);
    }
}

void loop() {
    long duration, distance;

    // Clear the trigPin
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);

    // Set the trigPin on HIGH state for 10 microseconds
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);

    // Read the echoPin, pulseIn returns the duration in microseconds
    duration = pulseIn(echoPin, HIGH);

    // Calculate the distance in cm
    distance = duration * 0.034 / 2;

    // Reset outputs
    digitalWrite(greenLED, LOW);
    digitalWrite(yellowLED, LOW);
    digitalWrite(redLED, LOW);

    if(distance >= 30 && distance <= 60) {
        digitalWrite(yellowLED, HIGH);
    } else if(distance < 30 && distance > 0) {
        digitalWrite(redLED, HIGH);
        
        // Play a tone on the buzzer
        tone(buzzer, 1000); // 1000Hz frequency
    } else if(distance > 60) {
        digitalWrite(greenLED, HIGH);
    }

    delay(100);
}
